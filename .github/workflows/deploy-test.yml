# File: .github/workflows/deploy-test.yml
name: Build and Deploy to Test

on:
  push:
    branches: [ develop, feature/*, bugfix/* ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghananauticalinfo/ditest:test-${{ env.BRANCH_NAME }}
            ghananauticalinfo/ditest:test-${{ env.BRANCH_NAME }}-${{ github.sha }}
          build-args: |
            ENVIRONMENT=test
          
  deploy-test:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      - name: Save DigitalOcean kubeconfig
        run: |
          echo "Available Kubernetes clusters:"
          doctl kubernetes cluster list
          
          # Get the cluster ID instead of relying on exact name match
          CLUSTER_ID=$(doctl kubernetes cluster list --format ID,Name --no-header | grep ${{ secrets.TEST_CLUSTER_NAME }} | awk '{print $1}')
          
          if [ -z "$CLUSTER_ID" ]
          then
            echo "Could not find cluster with name containing ${{ secrets.TEST_CLUSTER_NAME }}"
            echo "Please check the TEST_CLUSTER_NAME secret and available clusters listed above"
            exit 1
          else
            echo "Found cluster ID: $CLUSTER_ID"
            doctl kubernetes cluster kubeconfig save $CLUSTER_ID
          fi
      
      - name: Deploy to Kubernetes
        run: |
          # Apply the base Kubernetes manifests (service, ingress)
          kubectl apply -f k8s/test/deployment.yaml
    
          # Directly update the container image
          kubectl set image deployment/ditest ditest=ghananauticalinfo/ditest:test-${{ env.BRANCH_NAME }}-${{ github.sha }} -n test
    
          # Wait for rollout to complete
          kubectl rollout status deployment/ditest -n test